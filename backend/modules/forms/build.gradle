plugins {
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
	id 'java'
	id 'java-library'
 	id 'jacoco'
 	id 'org.sonarqube'
	id "org.owasp.dependencycheck" version "6.2.2"
	id "com.github.node-gradle.node" version "2.2.0"
}

archivesBaseName = name
description = "Provides Form integration APIs and UI components for the Sprout Platform"

ext {
	sonarProjectKey = "savantly-net_sprout-platform_forms"
}

apply from: '../../../gradle/sonar.gradle'
apply from: '../../../gradle/sonatype.gradle'

java {
  toolchain {
    languageVersion.set(JavaLanguageVersion.of(11))
  }
}

repositories {
	mavenCentral()
}


node {
    version = '14.19.1'
    download = true
}

yarn_build {
    inputs.files fileTree("src/plugin")
    inputs.file 'package.json'
    inputs.file 'yarn.lock'
    inputs.file 'tsconfig.json'
    inputs.file 'src/plugin.json'
    inputs.file 'src/module.ts'
    outputs.dir 'dist'
}

task copyPublicfiles(type: Copy) {
    from "$buildDir/../dist"
    into "$buildDir/resources/main/public/api/plugins/savantly-forms-module"
    outputs.upToDateWhen { false }
}
yarn_build.dependsOn yarn
copyPublicfiles.dependsOn yarn_build
classes.dependsOn copyPublicfiles

sourceSets {
    dev {
        java {
            compileClasspath += main.compileClasspath
            runtimeClasspath += main.runtimeClasspath
            srcDirs += ['src/dev/java', 'src/dev/resources']
        }
    }
}

// run `./gradlew :sprout-modules-forms:bootRun -Psuspend=y` to suspend for debugger connection
def suspend = project.ext.properties.suspend
if(!suspend) {
	suspend = 'n'
}
bootRun {
	main = 'example.DevApplication'
    classpath = sourceSets.dev.runtimeClasspath
	//sourceResources += sourceSets.main
    jvmArgs=[
  	  "-agentlib:jdwp=transport=dt_socket,server=y,suspend=$suspend,address=18080"
    ]
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

dependencyCheck {
	analyzers {
		nodeEnabled=false
	}
}

dependencies {
	api project(':sprout-core')
	api project(':sprout-spring-boot-starter')
	api 'org.freemarker:freemarker',
		'org.springframework.boot:spring-boot-starter-web',
		'com.vladmihalcea:hibernate-types-52:2.10.0'

	compileOnly 'org.projectlombok:lombok',
		'javax.interceptor:javax.interceptor-api:1.2',
		'javax.validation:validation-api:2.0.1.Final',
		"org.springframework.boot:spring-boot-devtools"
    annotationProcessor 'org.projectlombok:lombok',
        'org.springframework.boot:spring-boot-configuration-processor'
    
    testImplementation project(':sprout-module-test')
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test',
		'org.postgresql:postgresql'
	
	testImplementation "org.testcontainers:testcontainers:1.15.3",
		"org.testcontainers:junit-jupiter:1.15.3",
		"org.testcontainers:postgresql:1.15.3"
}

test {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

dependencyManagement {
	imports {
		mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
	}
}

clean {
    delete 'dist'
    delete 'build'
}
