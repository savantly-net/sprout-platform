ext.ossrhUsername = System.getenv('OSSRH_USER') ? System.getenv('OSSRH_USER') : (project.hasProperty('ossrhUsername') ? project.ossrhUsername : '')
ext.ossrhPassword = System.getenv('OSSRH_USER_TOKEN') ? System.getenv('OSSRH_USER_TOKEN') : (project.hasProperty('ossrhPassword') ? project.ossrhPassword : '')

ext.versionPostfix = project.hasProperty('versionPostfix') ? project.versionPostfix : 'SNAPSHOT'
project.version = '2.1.0-' + versionPostfix

ext.isReleaseVersion = !version.toString().endsWith("-SNAPSHOT")

signing {
    required {
        // signing is required if this is a release version and the artifacts are to be published
        isReleaseVersion && tasks.withType(PublishToMavenRepository).find {
             gradle.taskGraph.hasTask it
        }
    }
    useGpgCmd()
    sign publishing.publications
}

tasks.withType(Sign) {
	onlyIf { isReleaseVersion }
}

// Build, sign, and upload89
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = project.name
                description = project.description
                url = 'https://github.com/savantly-net/sprout-platform'

                scm {
                    connection = 'scm:git:ssh://github.com/savantly-net/sprout-platform.git'
                    developerConnection = 'scm:git:ssh://github.com/savantly-net/sprout-platform.git'
                    url = 'https://github.com/savantly-net/sprout-platform/tree/master'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        name = 'Jeremy Branham'
                        email = 'Jeremy@Savantly.net'
                        organization {
                            name = 'savantly.net'
                            url = 'http://savantly.net'
                        }
                        organizationUrl = 'https://github.com/savantly-net/'
                    }
                }
            }
        }
    }
	repositories {
		maven {
			name = "OSSRH"
			credentials {
				username = ossrhUsername
				password = ossrhPassword
			}
			def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
			def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
			url = isReleaseVersion ? releasesRepoUrl: snapshotsRepoUrl 
		}
	}
}
